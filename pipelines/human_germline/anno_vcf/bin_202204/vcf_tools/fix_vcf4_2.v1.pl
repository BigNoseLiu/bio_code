#!/usr/bin/perl
#!/bin/bash
use warnings;
use strict;
use Getopt::Long;
use Term::ANSIColor;
use FindBin qw($Bin $Script);
use File::Basename qw(basename dirname);
use File::Path qw(rmtree);
use Cwd qw(abs_path);
use Data::Dumper;


my ($help,$input_file,$ref_fa_file,$outfile,$near_tag_flag);
GetOptions(
	"help"=>\$help,
	"in=s"=>\$input_file,
	"out=s"=>\$outfile,
	"ref=s"=>\$ref_fa_file,
	"near"=>\$near_tag_flag,
);
if (defined $help ) {
	&usageWithColor();
	exit 0;
}

my %h_ref_fa = ();
my $load_ref_flag = 0;
my $line;

open IN,$input_file or die $!;
if( $input_file =~ /\.gz$/ ){
	open IN,"gunzip -c $input_file|" or die $!;
}
open OUT,">".$outfile or die $!;
while( $line = <IN> ){
	chomp $line;

	#vcf headers
	if( $line =~ /^#/ ){
		if( $line =~ /^#CHROM/  ){
			print OUT "##fix_cmd=perl $0 -in $input_file -out $outfile -ref $ref_fa_file\n";
		}
		print OUT $line."\n";
		next;
	}
	my @arr = split(/\t/,$line);

	#fix asterisk in vcf 4.2
	if( $arr[4] =~ /\*/ || $arr[4] =~ /\./ || $arr[4] =~ /-/){
		#加载参考基因组
		if( $load_ref_flag == 0 ){
			#get ref fa
			open REF,$ref_fa_file or die $!;
			$/ = ">";
			while( $line = <REF> ){
				if( $line =~ /^(\S+)\s/ ){
					my $chr = $1;
					$chr =~ s/^chr//i;
					$line =~ s/^[^\n]*\n//;
					$line =~ s/\s//g;
					$h_ref_fa{$chr} = $line;
				}
			}
			$/ = "\n";
			close REF;
			$load_ref_flag = 1;
		}

		$arr[1] = $arr[1]-1;
		my $chr = $arr[0];
		$chr =~ s/^chr//i;
		my $add_base = substr($h_ref_fa{$chr},$arr[1]-1,1);
		if( $add_base !~ /[ATCG]/i ){
			print STDERR "Err: Illegal base for $chr:$arr[1]:$add_base in $ref_fa_file\n";
		}
		$arr[3] = $add_base.$arr[3];
		my @alts = split(",",$arr[4]);
		for(my $i=0;$i<scalar@alts;$i++){
			if( $alts[$i] eq '*' || $alts[$i] eq '.' || $alts[$i] eq '-' ){
				$alts[$i] = $add_base;
			}
			else{
				$alts[$i] = $add_base.$alts[$i];
			}
		}
		$arr[4] = join(",",@alts);
	}
	print OUT join("\t",@arr)."\n";
}
close OUT;
close IN;




sub usageWithColor {
	print color "green";#change the text color
	print <<USAGE;
Description:
        Used to 1. fix */./- in vcf4.2 for vcf generated by gatk4
Usage:  
        perl $0 [options] -in gatk.filter.vcf -ref hg19.fa -out gatk.filter.fix.vcf
        Options:
	     -help : reveal help info
        Example:
        	perl $0 -in gatk.filter.vcf -ref hg19.fa -out gatk.filter.fix.vcf
Author & Contact:
	Mingming Liu
Last updated:
        2019-1-14
USAGE
	print color "reset";#change back the text color
}
sub err_print{
	print STDERR color "red";#change the text color
	print STDERR $_[0];
	print STDERR color "reset";#change back the text color
}
