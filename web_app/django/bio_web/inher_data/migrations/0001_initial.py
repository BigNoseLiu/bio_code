# Generated by Django 3.2.13 on 2022-05-12 08:23

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Alias',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, max_length=50, verbose_name='类型')),
                ('name', models.CharField(blank=True, max_length=200, verbose_name='别名')),
            ],
            options={
                'verbose_name': '别名库',
            },
        ),
        migrations.CreateModel(
            name='DiseaseInher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, max_length=50, verbose_name='类型')),
                ('ch_name', models.CharField(blank=True, max_length=200, verbose_name='中文疾病名')),
                ('en_name', models.CharField(blank=True, max_length=200, verbose_name='英文疾病名')),
                ('omim_id', models.CharField(blank=True, max_length=200, verbose_name='OMIM编号')),
                ('orphanet_id', models.CharField(blank=True, max_length=200, verbose_name='Orphanet编号')),
                ('inher_mode', models.CharField(blank=True, max_length=200, verbose_name='遗传模式')),
                ('ch_alias', models.ManyToManyField(blank=True, related_name='dis_alias_ch', to='inher_data.Alias', verbose_name='中文别名')),
                ('en_alias', models.ManyToManyField(blank=True, related_name='dis_alias_en', to='inher_data.Alias', verbose_name='英文别名')),
            ],
        ),
        migrations.CreateModel(
            name='Family',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('family_type', models.CharField(blank=True, choices=[('patient', '明显'), ('normal', '疑似'), ('normal', '无')], max_length=20, verbose_name='家族聚集')),
                ('family_id', models.CharField(blank=True, max_length=50, unique=True, verbose_name='家系编号')),
                ('family_descr', models.TextField(blank=True, verbose_name='家系说明')),
            ],
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(max_length=200, upload_to='files', verbose_name='文件上传')),
                ('file_descr', models.TextField(blank=True, verbose_name='文件说明')),
            ],
        ),
        migrations.CreateModel(
            name='Guidline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guid_type', models.CharField(blank=True, max_length=50, verbose_name='类型')),
                ('guid_name', models.CharField(blank=True, max_length=500, verbose_name='指南名称')),
                ('guid_url', models.CharField(blank=True, max_length=500, verbose_name='链接')),
                ('guid_abstract', models.TextField(blank=True, verbose_name='指南描述')),
                ('guid_file', models.ManyToManyField(blank=True, related_name='guidline2file', to='inher_data.File', verbose_name='资料')),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_type', models.CharField(blank=True, choices=[('patient', '患者'), ('normal', '正常人')], max_length=20, verbose_name='是否患病')),
                ('patient_name', models.CharField(blank=True, max_length=50, verbose_name='姓名')),
                ('patient_gender', models.CharField(blank=True, max_length=50, verbose_name='性别')),
                ('patient_age', models.CharField(blank=True, max_length=50, verbose_name='年龄')),
                ('patient_clinical', models.TextField(blank=True, verbose_name='患者描述')),
                ('family', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='inher_data.family', verbose_name='家族')),
                ('files', models.ManyToManyField(blank=True, related_name='patient2file', to='inher_data.File', verbose_name='资料')),
            ],
        ),
        migrations.CreateModel(
            name='Sample',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sample_id', models.CharField(blank=True, max_length=50, unique=True, verbose_name='样本编号')),
                ('sample_type', models.CharField(blank=True, max_length=50, verbose_name='样本类型')),
                ('sample_descr', models.TextField(blank=True, verbose_name='样本说明')),
                ('patient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='inher_data.patient', verbose_name='患者')),
            ],
        ),
        migrations.CreateModel(
            name='SNV',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chr_hg19', models.CharField(blank=True, max_length=50, verbose_name='【hg19】染色体')),
                ('pos1_hg19', models.IntegerField(blank=True, null=True, verbose_name='【HG19】位置1')),
                ('pos2_hg19', models.IntegerField(blank=True, null=True, verbose_name='【HG19】位置2')),
                ('ref_hg19', models.CharField(blank=True, max_length=200, verbose_name='【HG19】ref碱基')),
                ('alt_hg19', models.CharField(blank=True, max_length=200, verbose_name='【HG19】alt碱基')),
                ('chr_hg38', models.CharField(blank=True, max_length=50, verbose_name='【hg38】染色体')),
                ('pos1_hg38', models.IntegerField(blank=True, null=True, verbose_name='【HG38】位置1')),
                ('pos2_hg38', models.IntegerField(blank=True, null=True, verbose_name='【H38】位置2')),
                ('ref_hg38', models.CharField(blank=True, max_length=200, verbose_name='【HG38】ref碱基')),
                ('alt_hg38', models.CharField(blank=True, max_length=200, verbose_name='【HG38】alt碱基')),
                ('mut_hgvs', models.CharField(blank=True, max_length=200, verbose_name='变异HGVS名称')),
                ('gene', models.CharField(blank=True, max_length=200, verbose_name='基因')),
                ('nm_id', models.CharField(blank=True, max_length=200, verbose_name='标准转录本（NM）')),
                ('c_point', models.CharField(blank=True, max_length=200, verbose_name='核苷酸变异')),
                ('p_point', models.CharField(blank=True, max_length=200, verbose_name='氨基酸变化')),
            ],
        ),
        migrations.CreateModel(
            name='TestItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_name', models.CharField(blank=True, max_length=200, verbose_name='检测项目名称')),
                ('test_descr', models.TextField(blank=True, verbose_name='项目描述')),
            ],
        ),
        migrations.CreateModel(
            name='SampleTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sample', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='inher_data.sample', verbose_name='样本')),
                ('test_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='inher_data.testitem', verbose_name='检测项目')),
            ],
            options={
                'verbose_name': '02-样本检测',
            },
        ),
        migrations.CreateModel(
            name='Phenotype',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, max_length=50, verbose_name='类型')),
                ('ch_name', models.CharField(blank=True, max_length=200, verbose_name='中文名称')),
                ('en_name', models.CharField(blank=True, max_length=200, verbose_name='英文名称')),
                ('hpo_id', models.CharField(blank=True, max_length=200, verbose_name='HPO编号')),
                ('father_hpo_id', models.CharField(blank=True, max_length=200, verbose_name='父HPO编号')),
                ('ch_alias', models.ManyToManyField(blank=True, related_name='pheno_alias_ch', to='inher_data.Alias', verbose_name='中文别名')),
                ('en_alias', models.ManyToManyField(blank=True, related_name='pheno_alias_en', to='inher_data.Alias', verbose_name='英文别名')),
            ],
        ),
        migrations.AddField(
            model_name='patient',
            name='main_pheno',
            field=models.ManyToManyField(blank=True, related_name='patient2pheno', to='inher_data.Phenotype', verbose_name='主要表型'),
        ),
        migrations.CreateModel(
            name='PathSNV',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mut_type', models.CharField(blank=True, choices=[('germline', 'germline'), ('somatic', 'somatic'), ('mito', '线粒体')], max_length=50, verbose_name='类型')),
                ('mut_result', models.CharField(blank=True, choices=[('hom', '纯合'), ('het', '杂合'), ('comhet', '复合杂合'), ('hemi', '半合子')], max_length=50, verbose_name='变异结果')),
                ('father_result', models.CharField(blank=True, max_length=50, verbose_name='父亲结果')),
                ('mother_result', models.CharField(blank=True, max_length=50, verbose_name='母亲结果')),
                ('mut_freq', models.FloatField(blank=True, null=True, verbose_name='变异频率（%）')),
                ('fat_mut_freq', models.FloatField(blank=True, null=True, verbose_name='父亲变异频率（%）')),
                ('mot_mut_freq', models.FloatField(blank=True, null=True, verbose_name='母亲变异频率（%）')),
                ('mut_origin', models.CharField(blank=True, choices=[('both', '父母'), ('mot', '母源'), ('fat', '父源'), ('novo', '新发')], max_length=50, verbose_name='突变来源')),
                ('path_type', models.CharField(blank=True, choices=[('path', '致病'), ('likelypath', '可能致病'), ('benign', '良性'), ('likelybenign', '可能良性'), ('vus', 'VUS')], max_length=50, verbose_name='致病性')),
                ('guidline', models.ManyToManyField(blank=True, related_name='pathsnv2guidline', to='inher_data.Guidline', verbose_name='指南依据')),
                ('main_disease', models.ManyToManyField(blank=True, related_name='pathsnv2disease', to='inher_data.DiseaseInher', verbose_name='疾病')),
                ('main_pheno', models.ManyToManyField(blank=True, related_name='pathsnv2pheno', to='inher_data.Phenotype', verbose_name='主要表型')),
                ('mut', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='inher_data.snv', verbose_name='变异')),
                ('sample_test', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='inher_data.sampletest', verbose_name='样本检测')),
            ],
            options={
                'verbose_name': '01-致病变异',
            },
        ),
        migrations.AddField(
            model_name='family',
            name='files',
            field=models.ManyToManyField(blank=True, related_name='family2file', to='inher_data.File', verbose_name='资料'),
        ),
        migrations.CreateModel(
            name='Evidence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ev_type', models.CharField(blank=True, choices=[('pubmed', 'PubMed'), ('other', '其他')], max_length=50, verbose_name='类型')),
                ('ev_id', models.CharField(blank=True, max_length=50, verbose_name='编号')),
                ('ev_url', models.CharField(blank=True, max_length=500, verbose_name='链接')),
                ('ev_abstract', models.TextField(blank=True, verbose_name='描述')),
                ('ev_file', models.ManyToManyField(blank=True, related_name='ev2file', to='inher_data.File', verbose_name='资料')),
            ],
        ),
        migrations.CreateModel(
            name='ACMGEvidence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acmg_evidence', models.CharField(blank=True, choices=[('PVS1', 'PVS1'), ('PS1', 'PS1'), ('PS2', 'PS2'), ('PS3', 'PS3'), ('PS4', 'PS4'), ('PM1', 'PM1'), ('PM2', 'PM2'), ('PM3', 'PM3'), ('PM4', 'PM4'), ('PM5', 'PM5'), ('PM6', 'PM6'), ('PP1', 'PP1'), ('PP2', 'PP2'), ('PP3', 'PP3'), ('PP4', 'PP4')], max_length=50, verbose_name='ACMG证据等级')),
                ('acmg_level', models.CharField(blank=True, choices=[('verystrong', 'VeryStrong'), ('strong', 'Strong'), ('moderate', 'Moderate'), ('suporting', 'Suporting')], max_length=50, verbose_name='证据强度')),
                ('abstract', models.TextField(blank=True, verbose_name='描述')),
                ('evidence', models.ManyToManyField(blank=True, related_name='acmg2ev', to='inher_data.Evidence', verbose_name='参考依据')),
                ('path_snv', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='acmg2pathsnv', to='inher_data.pathsnv', verbose_name='致病变异')),
            ],
            options={
                'verbose_name': 'ACMG证据项',
            },
        ),
    ]
